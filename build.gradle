import org.echocat.gradle.plugins.golang.tasks.GolangTask
import org.echocat.gradle.plugins.golang.utils.Executor
import static org.echocat.gradle.plugins.golang.model.Platform.currentPlatform

plugins {
    id 'org.echocat.golang' version '0.1.11'
}

group 'github.com/echocat/gocheck-addons'

golang {
    // For testing only the current platform is required.
    platforms = currentPlatform()
    dependencies {
        build 'gopkg.in/check.v1'
        tool 'github.com/mattn/goveralls'
    }
    build {
        useTemporaryGopath = true
    }
    testing {
        coverProfile = "${buildDir}/testing/${name}.cover"
        coverProfileHtml = "${buildDir}/testing/${name}.cover.html"
    }
}

task baseBuild(type: GolangTask, overwrite: true) {
    action {
        throw new UnsupportedOperationException("This project only supports test task.");
    }
}

task uploadCoverage(type: GolangTask, group: "verification", description: "Upload test coverage report to coveralls.io.", dependsOn: "baseTest") {
    action {
        final token = System.getenv("COVERALLS_TOKEN")
        if (!token) {
            getState().skipped("NO-TOKEN-PROVIDED");
            return
        }
        Executor.executor("${project.buildDir}/tools/github.com/mattn/goveralls${build.currentPlatformExtension}", logger)
                .argument("-coverprofile=${project.buildDir}/testing/${project.name}.cover")
                .argument("-service=circle-ci")
                .argument("-repotoken=${token}")
                .env("GOROOT", toolchain.goroot)
                .env("GOPATH", build.gopath)
                .execute()
    }
}

test.dependsOn("uploadCoverage")
